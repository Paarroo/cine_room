<%#
  Metric Card Partial - Reusable dashboard metric display component

  Required params:
  - title: String - Card title
  - value: String/Number - Main metric value
  - icon: String - FontAwesome icon class

  Optional params:
  - trend: String - Trend indicator (e.g., "+12.5%")
  - trend_type: String - Trend type for styling (positive, negative, neutral)
  - color: String - Color theme (primary, accent, success, warning, danger)
  - subtitle: String - Additional context
  - link: String - Optional link URL
  - target: String - Stimulus target identifier
%>

<%
  # Set defaults for optional parameters
  trend = local_assigns.fetch(:trend, nil)
  trend_type = local_assigns.fetch(:trend_type, 'neutral')
  color = local_assigns.fetch(:color, 'primary')
  subtitle = local_assigns.fetch(:subtitle, nil)
  link = local_assigns.fetch(:link, nil)
  target = local_assigns.fetch(:target, nil)

  # Define color classes
  color_classes = {
    'primary' => 'text-primary border-primary/20 bg-primary/5',
    'accent' => 'text-accent border-accent/20 bg-accent/5',
    'success' => 'text-green-400 border-green-400/20 bg-green-400/5',
    'warning' => 'text-yellow-400 border-yellow-400/20 bg-yellow-400/5',
    'danger' => 'text-red-400 border-red-400/20 bg-red-400/5'
  }

  # Define trend classes
  trend_classes = {
    'positive' => 'text-green-400 bg-green-400/10',
    'negative' => 'text-red-400 bg-red-400/10',
    'neutral' => 'text-muted bg-white/5'
  }

  card_color = color_classes[color] || color_classes['primary']
  trend_class = trend_classes[trend_type] || trend_classes['neutral']

  # Base card classes
  base_classes = "metric-card glass-effect border rounded-2xl p-6 transition-all duration-300 hover:scale-[1.02] group cursor-pointer"

  # Data attributes for Stimulus
  data_attrs = {
    metric: title.downcase.gsub(/\s+/, '_'),
    admin_dashboard_target: target
  }.compact
%>

<% if link %>
  <%= link_to link,
      class: "#{base_classes} #{card_color}",
      data: data_attrs do %>
    <%= render 'shared/admin/dashboard/metric_card_content',
        title: title,
        value: value,
        icon: icon,
        trend: trend,
        trend_class: trend_class,
        subtitle: subtitle,
        color: color %>
  <% end %>
<% else %>
  <div
    class="<%= "#{base_classes} #{card_color}" %>"
    <% data_attrs.each do |key, val| %>
      data-<%= key.to_s.gsub('_', '-') %>="<%= val %>"
    <% end %>
  >
    <%= render 'shared/admin/dashboard/metric_card_content',
        title: title,
        value: value,
        icon: icon,
        trend: trend,
        trend_class: trend_class,
        subtitle: subtitle,
        color: color %>
  </div>
<% end %>

<%# Add loading skeleton for dynamic updates %>
<template id="metric-card-skeleton">
  <div class="metric-card-skeleton glass-effect border rounded-2xl p-6 animate-pulse">
    <div class="flex items-center justify-between mb-4">
      <div class="w-12 h-12 bg-white/10 rounded-xl"></div>
      <div class="w-16 h-6 bg-white/10 rounded"></div>
    </div>
    <div class="space-y-2">
      <div class="w-20 h-8 bg-white/10 rounded"></div>
      <div class="w-32 h-4 bg-white/10 rounded"></div>
    </div>
  </div>
</template>
